import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI

plugins {
    id 'com.epages.restdocs-api-spec' version '0.19.2' // REST Docs 플러그인 추가
    id 'org.hidetake.swagger.generator' version '2.18.2' // SwaggerUI 플러그인 추가
}

bootJar.enabled = true
jar.enabled = false

dependencies {
    // module-common 모듈을 의존성으로 추가
    implementation project(":module-common")

    // Spring Boot Web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

    // Spring Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail:3.3.4'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // MariaDB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // test
    testImplementation 'org.springframework.security:spring-security-test'

    // REST Docs
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.19.2'
    swaggerUI 'org.webjars:swagger-ui'
}

test {
    useJUnitPlatform() // JUnit 5 사용
    systemProperty "jasypt.encryptor.password", System.getProperty("jasypt.encryptor.password") // Jasypt 암호화 설정
}

// 생성된 API 스펙이 어느 위치에 있는지 지정
swaggerSources {
    sample {
        setInputFile(file('${project.buildDir}/api-spec/openapi3.yaml'))
    }
}

// openapi3 스펙 생성 시 설정 정보
openapi3 {
    servers = [
            { url = 'https://api.user.algopuni.site' },
            { url = 'http://localhost:8080' }
    ]
    title = "Algopuni User API"
    description = "Algopuni 사용자 API"
    version = "1.0.0"
    format = "yaml"

    // 개발 환경에서는 build/resources/main/static/docs 디렉토리에 생성
    if (profile == 'dev') {
        outputDirectory = 'build/resources/main/static/docs'
    }
}

// GenerateSwaggerUI task가 실행되기 전에 openapi3 task를 실행
tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn 'openapi3'
}

// 생성된 SwaggerUI 파일을 resources/main/static/docs 디렉토리로 복사
tasks.register('copySwaggerUI', Copy) {
    dependsOn 'generateSwaggerUISample'

    // 복사할 소스 파일 설정
    from("${layout.buildDirectory.dir('api-spec/openapi3.yaml').get().asFile}")

    // 대상 디렉토리 설정
    into("${layout.buildDirectory.dir('resources/main/static/docs').get().asFile}")
}

bootJar {
    dependsOn 'copySwaggerUI'
}

tasks.resolveMainClassName {
    dependsOn 'copySwaggerUI'
}
