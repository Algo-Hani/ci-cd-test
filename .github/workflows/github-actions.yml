name: algopuni-ci/cd
on:
    push:
        branches:
            - main
permissions:
    checks: write
jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            user_api_changed: ${{ steps.echo-changed-files.outputs.user-api-changed }}
            admin_api_changed: ${{ steps.echo-changed-files.outputs.admin-api-changed }}
        steps:
            -   name: Checkout Code
                uses: actions/checkout@v4

            -   name: Set up JDK 17
                uses: actions/setup-java@v4
                with:
                    java-version: '17'
                    distribution: 'temurin'
                    cache: gradle

            -   name: Verify JDK installation
                run: java -version

            -   name: Set up Gradle
                uses: gradle/actions/setup-gradle@v3
                with:
                    gradle-version: '8.10'

            -   name: Get changed files
                id: changed-files
                uses: tj-actions/changed-files@v45

            -   name: List all changed files
                env:
                    ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
                run: |
                    echo "USER_API_CHANGED=false" >> $GITHUB_ENV
                    echo "ADMIN_API_CHANGED=false" >> $GITHUB_ENV
                    
                    for file in ${ALL_CHANGED_FILES}; do
                        echo "$file was changed"
                        if [[ $file == *"module-user-api"* ]]; then
                            echo "USER_API_CHANGED=true" >> $GITHUB_ENV
                            echo "user-api-changed"
                        elif [[ $file == *"module-admin-api"* ]]; then
                            echo "ADMIN_API_CHANGED=true" >> $GITHUB_ENV
                            echo "admin-api-changed"
                        else
                            echo "ADMIN_API_CHANGED=true" >> $GITHUB_ENV
                            echo "USER_API_CHANGED=true" >> $GITHUB_ENV
                            echo "common-changed!!"
                            break
                        fi
                    done

            -   name: Echo changed files
                id: echo-changed-files
                run: |
                    echo "user-api-changed : $USER_API_CHANGED"
                    echo "admin-api-changed : $ADMIN_API_CHANGED"
                    echo "user-api-changed=$USER_API_CHANGED" >> "$GITHUB_OUTPUT"
                    echo "admin-api-changed=$ADMIN_API_CHANGED" >> "$GITHUB_OUTPUT"

            -   name: Build And Test
                run: |
                    if [[ $USER_API_CHANGED == "true" ]]; then
                        ./gradlew :module-user-api:clean :module-user-api:build
                    fi
                    
                    if [[ $ADMIN_API_CHANGED == "true" ]]; then
                        ./gradlew :module-admin-api:clean :module-admin-api:build
                    fi

            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v3

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3

            -   name: docker login
                uses: docker/login-action@v3
                with:
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}

            -   name: docker image build
                run: |
                    if [[ $USER_API_CHANGED == "true" ]]; then
                        cd module-user-api
                        docker buildx inspect --bootstrap
                        docker buildx build --platform linux/amd64,linux/arm64 -t potatowoong/algopuni:user-api --push .
                    cd ..
                    fi

                    if [[ $ADMIN_API_CHANGED == "true" ]]; then
                        cd module-admin-api
                        docker buildx inspect --bootstrap
                        docker buildx build --platform linux/amd64,linux/arm64 -t potatowoong/algopuni:admin-api --push .
                        cd ..
                    fi

    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Get Github Action IP
                id: ip
                uses: haythem/public-ip@v1.2

            -   name: Configure AWS Credentials
                uses: aws-actions/configure-aws-credentials@v1
                with:
                    aws-access-key-id: ${{ secrets.AWS_IAM_ACCESS_KEY }}
                    aws-secret-access-key: ${{ secrets.AWS_IAM_SECRET_ACCESS_KEY }}
                    aws-region: ap-northeast-2

            -   name: Add Github Actions IP to Security group
                run: |
                    aws ec2 authorize-security-group-ingress --group-name ${{ secrets.AWS_SECURITY_GROUP_NAME }} --protocol tcp --port 22 --cidr ${{steps.ip.outputs.ipv4}}/32

            -   name: SSH into EC2
                uses: appleboy/ssh-action@master
                with:
                    host: ${{ secrets.AWS_EC2_HOST }}
                    username: ${{ secrets.AWS_EC2_USERNAME }}
                    key: ${{ secrets.AWS_EC2_SSH_KEY }}
                    script: |
                        export USER_API_CHANGED="${{ needs.build.outputs.user_api_changed }}"
                        export ADMIN_API_CHANGED="${{ needs.build.outputs.admin_api_changed }}"
                        
                        if [[ "$USER_API_CHANGED" == "true" ]]; then
                            cd /algopuni/user-api
                            docker-compose down
                            docker-compose pull
                            docker-compose up -d
                        fi
                        
                        if [[ "$ADMIN_API_CHANGED" == "true" ]]; then
                             cd /algopuni/admin-api
                            docker-compose down
                            docker-compose pull
                            docker-compose up -d
                        fi

            -   name: Remove Github Actions IP from security group
                run: |
                    aws ec2 revoke-security-group-ingress --group-name ${{ secrets.AWS_SECURITY_GROUP_NAME }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
                env:
                    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_IAM_ACCESS_KEY }}
                    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_IAM_SECRET_ACCESS_KEY }}
                    AWS_DEFAULT_REGION: ap-northeast-2

            -   name: User Discord Webhook Action
                uses: sarisia/actions-status-discord@v1
                if: needs.build.outputs.user_api_changed == 'true'
                with:
                    webhook: ${{ secrets.DISCORD_WEBHOOK }}
                    title: "Algopuni User API Deployed"
                    image: ${{ secrets.DISCORD_IMAGE }}

            -   name: Admin Discord Webhook Action
                uses: sarisia/actions-status-discord@v1
                if: needs.build.outputs.admin_api_changed == 'true'
                with:
                    webhook: ${{ secrets.DISCORD_WEBHOOK }}
                    title: "Algopuni Admin API Deployed"
                    image: ${{ secrets.DISCORD_IMAGE }}
