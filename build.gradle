plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

// 빌드 시 최상위 모듈은 jar 생성 X
bootJar.enabled = false

subprojects {
    group = 'algohani'
    sourceCompatibility = '17'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        configureEach {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        // Spring Data JPA
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        // log4j2
        implementation 'org.springframework.boot:spring-boot-starter-log4j2'

        // test
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    test {
        useJUnitPlatform()
        systemProperty "jasypt.encryptor.password", System.getProperty("jasypt.encryptor.password")
    }

    // active profile 설정
    ext.profile = (!project.hasProperty('profile') || !profile) ? 'dev' : profile

    // resources 디렉토리 설정
    sourceSets {
        main {
            resources {
                srcDirs "src/main/resources", "src/main/resources-${profile}"
            }
        }
    }

    // resources 디렉토리 중복 파일 처리
    tasks {
        processResources {
            duplicatesStrategy = DuplicatesStrategy.INCLUDE
        }
    }

    // application.yml 파일에 프로퍼티 주입
    processResources {
        filesMatching('**/application.yml') {
            expand(project.properties)
        }
    }
}
